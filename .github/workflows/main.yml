name: PowerShell Execution & Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      deploymentMode:
        description: 'Select the deployment mode'
        required: true
        type: choice
        options:
          - BPT
          - NO_BPT
        
      customerType:
        description: 'Select the Customer Type'
        required: true
        type: choice
        options:
          - CLOUD_ESSENTIALS
          - CLOUD_BP_CONFIG
          - CLOUD

      subscriptionName:
        description: 'Enter the subscription name'
        required: true
        type: choice
        options:
          - BMQR-BPT-DEVELOPMENT
          - BMQR-BPT-PRODUCTION
          - OTHER

      resourceGroup:
        description: 'Enter the resource group'
        required: true
        type: choice
        options:
          - dev-r4-dev-cei-eus-rg-01
          - BMQR_IT
          - BMQR
      
      clusterName:
        description: 'Enter the cluster name'
        required: true
        type: choice
        options:
          - olympus
          - sinai
          - elbrus
        default: sinai

      bmqrAdminUser:
        description: 'Enter the BMQR Admin User'
        required: true
        type: string
        default: Rdoddi@coolblue.com

      bmqrPMUser:
        description: 'Enter the BMQR PM User'
        required: true
        type: string
        default: aehileman@coolblue.com
        
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Install Git LFS
      run: git lfs install
      shell: pwsh
    
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Verify LFS Files
      run: |
        git lfs ls-files
        git lfs pull
      shell: pwsh

    - name: Fetch LFS Files
      run: |
        echo "Fetching LFS files:"
        git lfs fetch --all
      shell: pwsh 

    - name: Debug LFS Files
      run: |
        echo "Debugging LFS files:"
        git lfs ls-files -l
        git lfs status
      shell: pwsh 

    - name: List Files with Sizes
      run: |
        echo "Listing files in the repository with sizes in KB:"
        Get-ChildItem -Recurse | Select-Object Name, @{Name="SizeKB";Expression={[math]::round($_.Length / 1KB, 2)}} | Format-Table -AutoSize
      shell: pwsh